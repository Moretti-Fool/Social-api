name: Build and Deploy Code

on: [push, pull_request]

jobs:
    Build:
        environment:
            name: testing
        env:
            DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
            DATABASE_PORT: ${{secrets.DATABASE_PORT}}
            DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
            DATABASE_NAME: ${{secrets.DATABASE_NAME}}
            DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
            SECRET_KEY: ${{secrets.SECRET_KEY}}
            ALGORITHM: ${{secrets.ALGORITHM}}
            ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
                    POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        runs-on: ubuntu-latest
        steps:
            - name: Pulling Git Repo
              uses: actions/checkout@v4
            - name: Installing python verson 3.13
              uses: actions/setup-python@v5
              with:
                python-version: '3.13' 
            - name: Update pip
              run: python -m pip install --upgrade pip
            - name: Installing Dependencies
              run: pip install -r requirements.txt
            - name: Test with Pytest
              run: |
                pytest
            # - name: Extract Docker image metadata
            #   id: meta
            #   uses: docker/metadata-action@v5
            #   with:
            #     images: ${{ secrets.DOCKER_HUB_USERNAME }}/my-image
            # - name: Log in to Docker Hub
            #   uses: docker/login-action@v3
            #   with:
            #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
            #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
            # - name: Set up Docker Buildx
            #   id: buildx
            #   uses: docker/setup-buildx-action@v3
            # - name: Build and push Docker image
            #   id: docker_build
            #   uses: docker/build-push-action@v6
            #   with:
            #       context: ./
            #       file: ./Dockerfile
            #       push: true
            #       tags: ${{ secrets.DOCKER_HUB_USERNAME }}/social-api:latest
            #       annotations: ${{ steps.meta.outputs.annotations }}
            #       provenance: true
            #       sbom: true
            #       cache-from: type=local,src=/tmp/.buildx-cache
            #       cache-to: type=local,dest=/tmp/.buildx-cache
            # - name: Image Digest
            #   run: echo ${{ steps.docker_build.outputs.digest}}

            #CD

    Deploy:
      runs-on: ubuntu-latest
      needs: [Build] # wait for build to run first

      steps:

        - name: Deploy
        # Only run this step if the branch is main
          if: github.ref == 'refs/heads/main'
          env:
            deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
          run: |
            curl "$deploy_url
        # - name: Deploying
        #   run: echo "ji"
          # pull our github repo
          # install render/heroku cli
          # render login
          # add git remote for render
          # git push heroku main



      
